# Generated by Django 5.0.4 on 2025-05-16 11:52

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TFTPlacement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank_name', models.CharField(max_length=25)),
                ('rank_image', models.ImageField(blank=True, null=True, upload_to='tft/images/')),
                ('price', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='TFTRank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank_name', models.CharField(max_length=25)),
                ('rank_image', models.ImageField(blank=True, null=True, upload_to='tft/images/')),
            ],
        ),
        migrations.CreateModel(
            name='TFTPlacementOrder',
            fields=[
                ('order', models.OneToOneField(default=None, on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='tft_placement_order', serialize=False, to='accounts.baseorder')),
                ('number_of_match', models.IntegerField(default=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_rank', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='last_rank', to='tft.tftplacement')),
            ],
        ),
        migrations.CreateModel(
            name='TFTMark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks_0_20', models.FloatField(default=0)),
                ('marks_21_40', models.FloatField(default=0)),
                ('marks_41_60', models.FloatField(default=0)),
                ('marks_61_80', models.FloatField(default=0)),
                ('marks_81_100', models.FloatField(default=0)),
                ('rank', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='mark', to='tft.tftrank')),
            ],
        ),
        migrations.CreateModel(
            name='TFTDivisionOrder',
            fields=[
                ('order', models.OneToOneField(default=None, on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='tft_division_order', serialize=False, to='accounts.baseorder')),
                ('current_division', models.IntegerField(blank=True, choices=[(1, 'IV'), (2, 'III'), (3, 'II'), (4, 'I')], null=True)),
                ('reached_division', models.IntegerField(blank=True, choices=[(1, 'IV'), (2, 'III'), (3, 'II'), (4, 'I')], null=True)),
                ('desired_division', models.IntegerField(blank=True, choices=[(1, 'IV'), (2, 'III'), (3, 'II'), (4, 'I')], null=True)),
                ('current_marks', models.IntegerField(blank=True, choices=[(0, '0-20'), (1, '21-40'), (2, '41-60'), (3, '61-80'), (4, '81-100')], null=True)),
                ('reached_marks', models.IntegerField(blank=True, choices=[(0, '0-20'), (1, '21-40'), (2, '41-60'), (3, '61-80'), (4, '81-100')], null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('current_rank', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='current_rank', to='tft.tftrank')),
                ('desired_rank', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='desired_rank', to='tft.tftrank')),
                ('reached_rank', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reached_rank', to='tft.tftrank')),
            ],
        ),
        migrations.CreateModel(
            name='TFTTier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_IV_to_III', models.FloatField(default=0)),
                ('from_III_to_II', models.FloatField(default=0)),
                ('from_II_to_I', models.FloatField(default=0)),
                ('from_I_to_IV_next', models.FloatField(default=0)),
                ('rank', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tier', to='tft.tftrank')),
            ],
        ),
    ]
