# Generated by Django 4.2.7 on 2024-01-06 15:20

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, null=True)),
                ('is_booster', models.BooleanField(default=False)),
                ('is_customer', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BaseOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, null=True)),
                ('game_id', models.IntegerField(null=True)),
                ('game_name', models.CharField(default='game name', max_length=300)),
                ('game_type', models.CharField(choices=[('D', 'Division'), ('P', 'Placement')], max_length=100, null=True)),
                ('price', models.FloatField(blank=True, default=0, null=True)),
                ('actual_price', models.FloatField(blank=True, default=0, null=True)),
                ('money_owed', models.FloatField(blank=True, default=0, null=True)),
                ('invoice', models.CharField(max_length=300)),
                ('status', models.CharField(blank=True, choices=[('New', 'New'), ('Droped', 'Droped'), ('Extend', 'Extend'), ('Done', 'Done'), ('Continue', 'Continue')], default='New', max_length=100, null=True)),
                ('duo_boosting', models.BooleanField(blank=True, default=False)),
                ('select_booster', models.BooleanField(blank=True, default=False)),
                ('turbo_boost', models.BooleanField(blank=True, default=False)),
                ('streaming', models.BooleanField(blank=True, default=False)),
                ('finish_image', models.ImageField(blank=True, null=True, upload_to='wildRift/images/orders')),
                ('is_done', models.BooleanField(blank=True, default=False)),
                ('is_drop', models.BooleanField(blank=True, default=False)),
                ('is_extended', models.BooleanField(blank=True, default=False)),
                ('customer_gamename', models.CharField(blank=True, max_length=300, null=True)),
                ('customer_password', models.CharField(blank=True, max_length=300, null=True)),
                ('customer_server', models.IntegerField(blank=True, choices=[(1, 'Europa'), (2, 'America'), (3, 'Asia'), (4, 'Africa'), (5, 'Australia')], null=True)),
                ('data_correct', models.BooleanField(blank=True, default=False)),
                ('message', models.CharField(blank=True, max_length=300, null=True)),
                ('payer_id', models.CharField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booster', models.ForeignKey(blank=True, default=None, limit_choices_to={'is_booster': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='booster_division', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer_orders', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BoosterPercent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booster_percent1', models.IntegerField(default=22)),
                ('booster_percent2', models.IntegerField(default=24)),
                ('booster_percent3', models.IntegerField(default=27)),
                ('booster_percent4', models.IntegerField(default=30)),
            ],
        ),
        migrations.CreateModel(
            name='Tip_data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payer_id', models.CharField(max_length=50, null=True)),
                ('invoice', models.TextField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('money', models.FloatField(blank=True, default=0, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wallet', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('notice', models.TextField(default='_')),
                ('status', models.CharField(choices=[('New', 'New'), ('Drop', 'Drop'), ('Extend', 'Extend'), ('Done', 'Done'), ('Tip', 'Tip')], default='New', max_length=100)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('type', models.CharField(choices=[('DEPOSIT', 'Deposit'), ('WITHDRAWAL', 'Withdrawal')], max_length=20)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_order', to='accounts.baseorder')),
                ('tip', models.OneToOneField(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='tip', to='accounts.tip_data')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TokenForPay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.TextField(max_length=40, unique=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('active', models.BooleanField(default=True)),
                ('booster', models.ForeignKey(blank=True, default=None, limit_choices_to={'is_booster': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='booster_room', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(blank=True, default=None, limit_choices_to={'is_booster': False}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer_room', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='accounts.baseorder')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('msg_type', models.CharField(blank=True, choices=[('normal', 'normal'), ('tip', 'tip')], default='normal', null=True)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.room')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
